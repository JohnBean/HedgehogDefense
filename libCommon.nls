;libCommon
;  Common variables used by all simulations

globals [
  ;General Index Macros
  FRENCH GERMAN    
  i_INF i_TANK i_AT i_ART
  
  ;State Macros
  s_P_DEFENSE s_DEFENSE s_ATTACK s_B_ATTACK s_RETREAT s_ROUTE s_RESERVE s_Q_BRIDGE s_ON_BRIDGE s_OVR_BRIDGE

  ;Simulation Variables
  TimeScale       ;How many hours (or portions of one) in a tick
  MapScale        ;The conversion factor between sim distance -> map distance (aka sim_distance * MapScale = map_distance)
  
  ;Historical values
  SystemRanges    ;Contains effective ranges (in km) for the system types
    
  ;Utility variables
  DefaultFrenchUnit
  DefaultGermanUnit
  DefaultGermanMotorizedUnit
]

breed [units unit]

units-own [
  name            ;the unit's historical name
  superior        ;the historical larger formation the unit is attached to
  allegiance      ;which side the units is part of (FRENCH = 0, GERMAN = 1)

  ;Unit's starting statistics
  startInf
  startTanks
  startAT
  startArt
  maxSpeed        ;in km per hour

  ;Unit's current statistics
  curInf
  curTanks
  curAT
  curArt
  curSpeed
  curDRange       ;base range of direct fire weapons, in km
  curIRange       ;base range of indirect fire weapons, in km
  effectiveness   ;unit's remaining strength, as a percentage (1.0 -> 0.0)
  
  ;Variables for unit behavior
  state               ;unit's current behavior
                      ;  s_P_DEFENSE, s_DEFENSE, s_ATTACK, s_B_ATTACK, s_RETREAT, s_ROUTE, s_RESERVE, s_Q_BRIDGE, s_ON_BRIDGE, s_OVR_BRIDGE
  beginEffectiveness  ;unit's effectiveness when starting current elected behavior
  beginState          ;unit's state before being switched
  beginHeading        ;unit's declared heading when starting current elected behavior
  targetPatch
  isNewState?         ;whether or not the current state is newly set
  
  ;Combat variables
  enemyStrength   ;total enemy strength directed at this unit at the end of the tick
                  ;(e.g. if dX = -Byx, then this variable will be -(y1 + y2 + y3 + ... + yn)
                  ;  and dX = -(enemyStrength)Bx
  
  ;Bridge variables
  targetBridge    ;0 none / already crossed, 1 abbeville bridge, 2 amiens bridge, 3 perrone bridge
  bridgeCrossed
  destinationNum
  destinationX
  destinationY
  
;  state           ;1 ready for orders, 2 moving to position(nazi)/retreat (french), 3 crossing bridge, 4 ready for orders after crosssed, 5 moving after crossed, 6 full retreat
]

;Main library setup, should always be called once at the beginning
to setup-Common
  __clear-all-and-reset-ticks
  
  ;General index macros for 2D lists
  set FRENCH 0
  set GERMAN 1
  set i_INF 0
  set i_TANK 1
  set i_AT 2
  set i_ART 3

  ;State macros
  set s_P_DEFENSE 0
  set s_DEFENSE 1
  set s_ATTACK 2
  set s_B_ATTACK 3
  set s_RETREAT 4
  set s_ROUTE 5
  set s_RESERVE 6
  set s_Q_BRIDGE 7
  set s_ON_BRIDGE 8
  set s_OVR_BRIDGE 9
  
  ;Simulation variables
  set TimeScale 0.5
  set MapScale ( 125 / world-height)  ; For Google Maps "map.png", the map covers 125km vertically, and is square
  
  ;Historical values
  ;Note: these are average effective ranges to hit - penetration et al. are included in Lanchester constants
  ;  (FRENCH, GERMAN)
  ;  (Infantry, Tanks, AT, Artillery)
  set SystemRanges [ [0.35 0.5  0.7 10]
                     [0.4  0.55 0.7 10] ]
  
  ;Default (scratch) unit statistics
  ;  (name, superior, allegiance, startInf, startTanks, startAT, startArt, maxSpeed, curDRange, curIRange)
  let FrenchRanges (item FRENCH SystemRanges)
  let GermanRanges item GERMAN SystemRanges
  set DefaultFrenchUnit (list "A Composite Brigade" "B Composite Division" 99 3500 80 90 12 5 (item i_INF FrenchRanges) (item i_ART FrenchRanges))
  set DefaultGermanUnit (list "X Composite Brigade" "Y Composite Division" 99 3500 80 90 12 5 (item i_INF GermanRanges) (item i_ART GermanRanges))
  set DefaultGermanMotorizedUnit (list "X Motorized Brigade" "Y Composite Division" 99 3500 80 90 12 30 (item i_INF GermanRanges) (item i_ART GermanRanges))
end

;----------------------------------------------
;==          UTILITY FUNCTIONS               ==
;----------------------------------------------
to c_writeUnit [ statsList ]
  set name (item 0 statsList)
  set superior (item 1 statsList)
  set allegiance (item 2 statsList)
  set startInf (item 3 statsList)
  set startTanks (item 4 statsList)
  set startAT (item 5 statsList)
  set startArt (item 6 statsList)
  set maxSpeed (item 7 statsList) / MapScale * TimeScale       ;converted to simulation distance per tick
  
  set curInf startInf
  set curTanks startTanks
  set curAT startAT
  set curArt startArt
  set curSpeed maxSpeed
  set curDRange (item 8 statsList) / MapScale                  ;converted to simulation distance
  set curIRange (item 9 statsList) / MapScale                  ;converted to simulation distance
  
  set shape "Default"
  set size 7
  set effectiveness 1
  set beginEffectiveness effectiveness
  set isNewState? false
end

to-report c_nearestEnemy
  let otherSide -1
  ifelse (allegiance = GERMAN) [ set otherSide FRENCH ]
  [ set otherSide GERMAN ]
  report min-one-of units with [allegiance = otherSide and effectiveness > 0] [distance myself]
end

;----------------------------------------------
;==             MAP FUNCTIONS                ==
;----------------------------------------------

;Reports the physical distance between the calling unit and the specified unit, using the map scale
;to-report c_distance [ unit ]
;  report MapScale * distance unit
;end